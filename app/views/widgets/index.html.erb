<%= render partial: "shared/heading", locals: { title: 'Widgets', tagline: "Below are your website widgets."} %>

<div class="w-full">
  <% if notice.present? %>
    <p class="py-2 px-3 bg-green-50 mb-5 text-green-500 font-medium rounded-lg inline-block" id="notice"><%= notice %></p>
  <% end %>

  <div id="widgets" class="max-w-3xl mx-auto">
    <table>
      <thead class="font-bold text-left">
        <tr>
          <th>Name</th>
          <th>Snippet</th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <%= render @widgets %>
      </tbody>
    </table>

    <div class="flex justify-between items-center">
      <%= link_to 'New widget', new_widget_path, class: "rounded-lg py-3 px-5 bg-blue-600 text-white block font-medium" %>
    </div>
  </div>
</div>


<script type="text/javascript">
function copySnippet(widgetId) {
  // Get the text field
  var snippet = document.getElementById("widget_" + widgetId + "_snippet");

  // Pass it to the copy sequence
  copyTextToClipboard(snippet.value);
  alert('Snippet was copied!');
}

function copyTextToClipboard(text) {
  if (!navigator.clipboard) {
    fallbackCopyTextToClipboard(text);
    return;
  }
  navigator.clipboard.writeText(text).then(function() {
    console.log('Async: Copying to clipboard was successful!');
  }, function(err) {
    console.error('Async: Could not copy text: ', err);
  });
}

function fallbackCopyTextToClipboard(text) {
  var textArea = document.createElement("textarea");
  textArea.value = text;

  // Avoid scrolling to bottom
  textArea.style.top = "0";
  textArea.style.left = "0";
  textArea.style.position = "fixed";

  document.body.appendChild(textArea);
  textArea.focus();
  textArea.select();

  try {
    var successful = document.execCommand('copy');
    var msg = successful ? 'successful' : 'unsuccessful';
    console.log('Fallback: Copying text command was ' + msg);
  } catch (err) {
    console.error('Fallback: Oops, unable to copy', err);
  }

  document.body.removeChild(textArea);
}
</script>
